#include <Servo.h> 

Servo servo;

int valor_limite= 500;                  // Fiaja el valor limite en el que se activa la alarma    

int d_izq1 = A1;
int d_izq = A2;

int d_der1 = A3;
int d_der = A4;


int t1 = 10;
int e1 = 9;
int t2 = 3;
int e2 = 2;
int t3 = A1;
int e3 = A2;
int t4 = A3;
int e4 = A4;

//int t3 = A5;  Futuro tercer sensor ultrasonico
//int e3 = A4;  Futuro tercer sensor ultrasonico

int IN1 = 12;
int IN2 = 13;
int ENA = 11;
int IN3 = 4;
int IN4 = 5;
int ENB = 6;

float valor_alcohol;

void setup() 
{
   Serial.begin(8000);                   // Activa el puerto Serial a 9600 Baudios
  pinMode(8,OUTPUT);                   // Configura el Pin 8 como salida para el Zumbador

  servo.attach(7);
  

  pinMode(t1,OUTPUT);
  pinMode(e1,INPUT);
  pinMode(t2,OUTPUT);
  pinMode(e2,INPUT);
  pinMode(t3,OUTPUT);
  pinMode(e3,INPUT);
  pinMode(t4,OUTPUT);
  pinMode(e4,INPUT);
  
  //pinMode(t3,OUTPUT);
  //pinMode(e3,INPUT);
  
  pinMode(d_izq,INPUT);
  pinMode(d_izq,INPUT);

  
  pinMode(IN1,OUTPUT);
  pinMode(IN2,OUTPUT);
  pinMode(ENA,OUTPUT);
  pinMode(IN3,OUTPUT);
  pinMode(IN4,OUTPUT);
  pinMode(ENB,OUTPUT);
} 
 
void loop() 
{ 

  valor_alcohol=analogRead(A3);
  Serial.println(valor_alcohol);       // Envia al Serial el valor leido del Sensor MQ3 
  float porcentaje=(valor_alcohol/1000);  //calcula el porcentaje
  Serial.println(porcentaje);            // Envia al Serial el porcentaje 
  Serial.println(' '); 
  

  
  int aux;
  int ultra1;
  int ultra2;
  int ultra3;
  int ultra4;
  int cont = 0;
  boolean izq1 = digitalRead(d_izq);   //Devuelve false cuando detecta algo
  boolean der2 = digitalRead(d_der);   //Devuelve false cuando detecta algo
  boolean izq3 = digitalRead(d_izq);   //Devuelve false cuando detecta algo
  boolean der4 = digitalRead(d_der);   //Devuelve false cuando detecta algo
    


  servo.write(90);

 
  ultra1 = ultral(t1,e1);  //Activamos Ultrasonico 1
  delay(20);
  ultra2 = ultra2(t2,e2);  //Activamos Ultrasonico 2
  delay(20);
  ultra3 = ultra3(t3,e3);  //Activamos Ultrasonico 1
  delay(20);
  ultra4 = ultra4(t4,e4);  //Activamos Ultrasonico 2
  delay(20);
  


  if(ultra2 < 20 || ultra1 < 20)  //Se activa cuando los ultrasonicos detectan objetos a menos de 20cm
  {
    if(izq == LOW || der == LOW)  //Se activa cuando los infrarojos encuentran obstaculos
    {
      motor(-1,180,180);  //Funcion para controlar motores -1 = reversa
      delay(1000);
    }


    else
    {
      aux = sele();
      while(aux < 30 && ultra2 < aux)
      {
        aux = sele();
        delay(500);
      }
    }
  }
  
  else
  {
    if(izq == LOW)
    {
      while(izq == LOW)           //Se activa cuando el sensor infrarojo izquierdo detecta obstaculo
      {
        motor(1,120,250);         //Potencia mas el segundo motor para que el robot gire hacia la derecha
        izq = digitalRead(d_izq);
        cont++;
        delay(20);
        if(cont > 200)            //Se activa cuando el robot queda travado sin avanzar y retrosede
        {
          motor(-1,150,150);
          delay(500);
        }
      }
    }
    else if(der == LOW)           //Se activa cuando el sensor infrarojo derecho detecta obstaculo
    {
      while(der == LOW)
      {
        motor(1,250,120);         //Potencia mas el primer motor para que el robot gire hacia la izquierda
        der = digitalRead(d_der);
        cont++;
        delay(20);
        if(cont > 200)            //Se activa cuando el robot queda travado sin avanzar y retrosede
        {
          motor(-1,150,150);
          delay(500);
        }
      }
    }
///////////////////////////////////////////////////////////////////////////////////////
    
    else
    {
      motor(1,180,180);           //Camina hacia adelante
    }
  }
} 

 
int ultra(int Trig, int Echo)     //Funcion para controlar Ultrasonicos
{
  long duracion;
  long distancia;
  
  digitalWrite(Trig,LOW);
  delayMicroseconds(2);
  digitalWrite(Trig,HIGH);
  delayMicroseconds(10);
  digitalWrite(Trig,LOW);
  
  duracion = pulseIn(Echo,HIGH);
  distancia = (duracion/2)/29;
  
  return distancia;
}

void motor(int dir,int m1,int m2)   //Funcion para controlar los motores
{
  if(dir==1)
  {
    digitalWrite(IN1,HIGH);
    digitalWrite(IN2,LOW);
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,HIGH);
  }
  else if(dir==-1)
  {
    digitalWrite(IN1,LOW);
    digitalWrite(IN2,HIGH);
    digitalWrite(IN3,HIGH);
    digitalWrite(IN4,LOW);
  }
  else if(dir==2)
  {
    digitalWrite(IN1,HIGH);
    digitalWrite(IN2,LOW);
    digitalWrite(IN3,HIGH);
    digitalWrite(IN4,LOW);
  }
  else if(dir==-2)
  {
    digitalWrite(IN1,LOW);
    digitalWrite(IN2,HIGH);
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,HIGH);
  }
  else
  {
    digitalWrite(IN1,LOW);
    digitalWrite(IN2,LOW);
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,LOW);
  }

  analogWrite(ENA,m1);
  analogWrite(ENB,m2);
}

////////////////////////////////////////////
 if(ultra3 < 20 || ultra4 < 20)  //Se activa cuando los ultrasonicos detectan objetos a menos de 20cm
  {
    if(izq == LOW || der == LOW)  //Se activa cuando los infrarojos encuentran obstaculos
    {
      motor(-1,180,180);  //Funcion para controlar motores -1 = reversa
      delay(1000);
    }


    else
    {
      aux = sele();
      while(aux < 30 && ultra4 < aux)
      {
        aux = sele();
        delay(500);
      }
    }
  }
  
  else
  {
    if(izq == LOW)
    {
      while(izq == LOW)           //Se activa cuando el sensor infrarojo izquierdo detecta obstaculo
      {
        motor(1,120,250);         //Potencia mas el segundo motor para que el robot gire hacia la derecha
        izq = digitalRead(d_izq);
        cont++;
        delay(20);
        if(cont > 200)            //Se activa cuando el robot queda travado sin avanzar y retrosede
        {
          motor(-1,150,150);
          delay(500);
        }
      }
    }
    else if(der == LOW)           //Se activa cuando el sensor infrarojo derecho detecta obstaculo
    {
      while(der == LOW)
      {
        motor(1,250,120);         //Potencia mas el primer motor para que el robot gire hacia la izquierda
        der = digitalRead(d_der);
        cont++;
        delay(20);
        if(cont > 200)            //Se activa cuando el robot queda travado sin avanzar y retrosede
        {
          motor(-1,150,150);
          delay(500);
        }
      }
    }
////////////////////////////////////////////////////////////////////
else
    {
      motor(1,180,180);           //Camina hacia adelante
    }
  }
} 

 
int ultra(int Trig, int Echo)     //Funcion para controlar Ultrasonicos
{
  long duracion;
  long distancia;
  
  digitalWrite(Trig,LOW);
  delayMicroseconds(2);
  digitalWrite(Trig,HIGH);
  delayMicroseconds(10);
  digitalWrite(Trig,LOW);
  
  duracion = pulseIn(Echo,HIGH);
  distancia = (duracion/2)/29;
  
  return distancia;
}

void motor(int dir,int m1,int m2)   //Funcion para controlar los motores
{
  if(dir==3)
  {
    digitalWrite(IN1,HIGH);
    digitalWrite(IN2,LOW);
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,HIGH);
  }
  else if(dir==-3)
  {
    digitalWrite(IN1,LOW);
    digitalWrite(IN2,HIGH);
    digitalWrite(IN3,HIGH);
    digitalWrite(IN4,LOW);
  }
  else if(dir==4)
  {
    digitalWrite(IN1,HIGH);
    digitalWrite(IN2,LOW);
    digitalWrite(IN3,HIGH);
    digitalWrite(IN4,LOW);
  }
  else if(dir==-4)
  {
    digitalWrite(IN1,LOW);
    digitalWrite(IN2,HIGH);
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,HIGH);
  }
  else
  {
    digitalWrite(IN1,LOW);
    digitalWrite(IN2,LOW);
    digitalWrite(IN3,LOW);
    digitalWrite(IN4,LOW);
  }

  analogWrite(ENA,m1);
  analogWrite(ENB,m2);
}

//////////////////////////////////////////

int sele()                //Funcion que detecta si el camino izquierdo o derecho es el mas largo girando hacia el mismo
{
  int iz;
  int de;
  int aux;
  motor(0,0,0);
  delay(200);
  
  servo.write(0);
  delay(2000);
  de = ultra(t1,e1);
  delay(20);

  servo.write(180);
  delay(2000);
  iz = ultra(t1,e1);
  delay(20);

  servo.write(90);
  delay(500);
  
  if(de > iz)
  {
    aux = ultra(t2,e2);
    delay(20);
    while(aux < de)
    {
      motor(2,150,150);
      aux = ultra(t2,e2);
      delay(20);
    }
    return de;
  }
    
  else
  {
    aux = ultra(t2,e2);
    delay(20);
    while(aux < iz)
    {
      motor(-2,150,150);
      aux = ultra(t2,e2);
      delay(20);
    }
    return iz;
  }
}
///////////////////////////////////////
int sele()                //Funcion que detecta si el camino izquierdo o derecho es el mas largo girando hacia el mismo
{
  int iz;
  int de;
  int aux;
  motor(0,0,0);
  delay(200);
  
  servo.write(0);
  delay(2000);
  de = ultra(t3,e3);
  delay(20);

  servo.write(180);
  delay(2000);
  iz = ultra(t3,e3);
  delay(20);

  servo.write(90);
  delay(500);
  
  if(de > iz)
  {
    aux = ultra(t4,e4);
    delay(20);
    while(aux < de)
    {
      motor(2,150,150);
      aux = ultra(t4,e4);
      delay(20);
    }
    return de;
  }
    
  else
  {
    aux = ultra(t4,e4);
    delay(20);
    while(aux < iz)
    {
      motor(-2,150,150);
      aux = ultra(t4,e4);
      delay(20);
    }
    return iz;
  }
}

if(valor_alcohol > valor_limite){    // Si la medida de gas metano es mayor de valor limite
       digitalWrite(8, HIGH);          // Enciende el Zumbador conectado al Pin 13
   }

      else{                                // Si es menor del valor limite apaga el Zumbador
      digitalWrite(8, LOW); 
   }
  delay (500);                          // Espera 300ms para realizar la proxima medida
} 
